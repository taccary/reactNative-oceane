// Script de test pour v√©rifier la structure des donn√©es des ports
const { API_BASE_URL } = require('./src/config');

async function testPortsAPI() {
  console.log('üß™ Test de l\'API des ports...\n');
  
  try {
    console.log('üì° Appel de l\'API:', `${API_BASE_URL}/ports`);
    const response = await fetch(`${API_BASE_URL}/ports`);
    console.log('üìä Status de la r√©ponse:', response.status);
    
    if (response.ok) {
      const data = await response.json();
      console.log('üìÑ Nombre de ports:', data.length);
      
      if (data.length > 0) {
        console.log('\nüîç Structure du premier port:');
        const firstPort = data[0];
        console.log('Cl√©s disponibles:', Object.keys(firstPort));
        console.log('Donn√©es compl√®tes:', JSON.stringify(firstPort, null, 2));
        
        // V√©rifier sp√©cifiquement l'ID
        if (firstPort.id) {
          console.log('‚úÖ ID trouv√©:', firstPort.id, '(type:', typeof firstPort.id, ')');
        } else {
          console.log('‚ùå Pas d\'ID trouv√© - utilisation de nom_court');
        }
      } else {
        console.log('‚ö†Ô∏è Aucun port trouv√© dans la r√©ponse');
      }
    } else {
      console.log('‚ùå Erreur API:', response.status);
    }
  } catch (error) {
    console.error('‚ùå Erreur de connexion:', error.message);
  }
}

// Ex√©cuter le test si ce fichier est appel√© directement
if (require.main === module) {
  testPortsAPI();
}

module.exports = { testPortsAPI };
